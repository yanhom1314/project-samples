
常用命令
gradle -?
gradle -t 

build.gradle
依赖管理
repositories{
	flatDir(dirs: "$projectDir/lib")
	mavenLocal()
	mavenCentral()
	mavenRepo urls:['https://repository.jboss.org/nexus/content/groups/public/','https://repository.jboss.org/nexus/content/groups/public/']
}
dependencies{	
	runtime group: 'commons-io', name: 'commons-io', version: '1.4'
	runtime group: 'org.hibernate', name: 'hibernate-core', version: '3.6.0.Final'
	compile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: '1.1.0.CR1'
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '1.7.5'
	providedCompile (
			[group:'javax.servlet', name:'javax.servlet-api', version:'3.0.1'],
			[group:'javax.servlet', name:'jsp-api', version:'2.0.1']
	)
	compile fileTree(dir: '../exlibs', include: '*.jar')
	
	testCompile group:'junit', name:'junit',version:'4.+'		
	testCompile('org.testng:testng:5.14.1')
}

apply plugin: 'war'
编辑
configurations {
	runtime
	compile
}
动态任务
def dyn_list=['a','b','c']
dyn_list.each { item ->
	task "dt_${item}"(dependensOn:'classes') << {
		println "The item'name is ${item}."
	}
}
多项目
	parent_project\
	build.gradle
	settings.grale
	++++\sub_project1
	++++\sub_project2

settings.gradle
include 'sub_project1', 'sub_project2'
builde.gradle

++++\sub_project1\build.gradle	
project(':sub_porject'){
	Closure cl={task -> println "${task.project.name}!!"}
	task hello(dependesOn:'classes') << cl
}
++++\sub_project2\build.gradle
dependsOn(':sub_project1')

匹配老项目的结构
sourceSets { 
	 main { 
		java { 
			srcDir 'src/java'
		}
		resources{
			srcDir 'src/resources'
		}
	 } 
 } 
 在WarPlugin中改变src/main/webapp目录
 webAppDirName='src/WebContext'

 
 Maven
#build.gradle
apply plugin: 'maven'

group = 'gb'
version = '1.0
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://e:/repository")
        }
    }
}
Copy
task module(dependsOn: 'install',type:Copy){
		from('./build/libs')
		include('*.jar')
		into('./lib')
}