
buildscript {
    repositories {
      maven {url "file:///D:/repository/.m2"}      
      ivy {url "file:///D:/repository/.ivy2/cache"}
      ivy {url "file:///D:/repository/.ivy2/local"}
      maven {url "http://maven.aliyun.com/nexus/content/groups/public"}
      maven {url  "https://dl.bintray.com/yafengli/maven"}      
    } 
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
project.buildDir = 'target'
jar {
    baseName = 'gs-rest-service'
    version = '0.1.0'
    excludes = ['**/node_modules', '**/webpack.config.js', '**/package.json', '**/.babelrc']
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    //options.encoding = 'UTF-8'
    options.compilerArgs.addAll(["-XDignore.symbol.file", "-Xlint:unchecked"])

    excludes = ['**/node_modules', '**/webpacke.config.js', '**/package.json']
}
compileJava.dependsOn(processResources)
repositories {
    maven {url "file:///D:/repository/.m2"}      
    ivy {url "file:///D:/repository/.ivy2/cache"}
    ivy {url "file:///D:/repository/.ivy2/local"}
    maven {url "http://maven.aliyun.com/nexus/content/groups/public"}   
    maven {url  "https://dl.bintray.com/yafengli/maven"}     
}
dependencies {
    compile("org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-websocket",
            "org.springframework.boot:spring-boot-starter-freemarker",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.boot:spring-boot-devtools",
            "org.apache.shiro:shiro-spring:$shiro",
            "org.apache.oltu.oauth2:org.apache.oltu.oauth2.authzserver:$oltu",
            "org.apache.oltu.oauth2:org.apache.oltu.oauth2.resourceserver:$oltu",
            "com.h2database:h2:$h2",
            "com.github.axet:kaptcha:$kaptcha")
    testCompile("junit:junit")
}