apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'application'

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$_protobuf"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$_protoc"
    }
    generatedFilesBaseDir = "$projectDir/src/generated"
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$_grpc"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/generated/main/grpc'
            srcDir 'src/generated/main/java'
            srcDir 'src/main/java'
            srcDir 'src/main/proto'
        }
    }
}
startScripts.enabled = false

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    jcenter()
}

dependencies {
    compile(
            "io.grpc:grpc-netty:$_grpc",
            "io.grpc:grpc-protobuf:$_grpc",
            "io.grpc:grpc-stub:$_grpc")
    testCompile("junit:junit:4.12")
}

task helloWorldServer(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

task helloWorldClient(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.helloworld.HelloWorldClient'
    applicationName = 'hello-world-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = jar.outputs.files + project.configurations.runtime
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    fileMode = 0755
}