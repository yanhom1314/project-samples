
	
	JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。易于人阅读和编写。同时也易于机器解析和生成。它基于JavaScript（Standard ECMA-262 3rd Edition - December 1999）的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。这些特性使JSON成为理想的数据交换语言。

JSON构建的结构：
　　1. “名称/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为对象（object），纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。
　　2. 值的有序列表（An ordered list of values）。在大部分语言中，它被理解为数组（array）。
　　这些都是常见的数据结构。事实上大部分现代计算机语言都以某种形式支持它们。这使得一种数据格式在同样基于这些结构的编程语言之间交换成为可能。

JSON的具体形式
　　1、对象是一个无序的“‘名称/值’对”集合。一个对象以“{”开始，以“}”结束。每个“名称”后跟一个“：”，“‘名称/值’对”之间使用“，”分隔。
　　2、数组是值（value）的有序集合。一个数组以“[”开始，“]”结束。值之间使用“，”分隔。
　　3、值（value）可以是双引号括起来的字符串（String）、数值(number)、true、false、null、对象(object)或者数组(array)。这些结构可以嵌套。
　　4、字符串（string）是由双引号包围的任意数量Unicode字符的集合，使用反斜体转义。一个字符(character)即一个单独的字符串(characeter string).
	
	鉴于JavaScript对JSON数据的原生支持，在项目开发中，针对于数据传输在XML、二进制考虑之外JSON也是非常值得推荐使用的一种方式。


例如：
var data={
	"time":"2007-10-10 12:00:00",	
	"tcp":{"0.0.0.0":["1","2"],"0.0.0.1":["3","4","5"],"0.0.0.2":["6","7","8","9"]},
	"udp":{"0.0.0.0":["1","2"],"0.0.0.1":["3","4","5"],"0.0.0.2":["6","7","8","9"]}
};
获取：
data.time 
data["time"]
遍历
for(var d in data.tcp){ 
	alert(d);//将tcp对应的key值赋予d变量；
	alert(data.tcp[d].length);//获取数组的长度
	for(var i in data.tcp[d]){
		alert(i);//获取数组的下标
		alert(data.tcp[d][i]);//获取数组的值
	}
}


