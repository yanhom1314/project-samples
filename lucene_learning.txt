;;建立索引
File index = new File("f:/Tmp/demo/index");
Directory dir = FSDirectory.open(index);
Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_40);//分析器
IndexWriterConfig iwc = new IndexWriterConfig(Version.LUCENE_40, analyzer);
IndexWriter writer = new IndexWriter(dir, iwc);

FileInputStream fis = null;
try {
    fis = new FileInputStream(file);
    Document doc = new Document();

	//Document中添加各项索引值，定义是否存储(Field.Store.YES|Field.Store.NO)
    doc.add(new StringField(INDEX_PATH, file.getPath(), Field.Store.YES));
    doc.add(new LongField(INDEX_MODIFIED, file.lastModified(), Field.Store.NO));
    doc.add(new TextField(INDEX_CONTENTS, new BufferedReader(new InputStreamReader(fis, "UTF-8"))));

	//根据打开模式，确定是新增文档还是更新文档
    if (writer.getConfig().getOpenMode() == IndexWriterConfig.OpenMode.CREATE) {
        writer.addDocument(doc);
    } else {
        writer.updateDocument(new Term("path", file.getPath()), doc);
    }
} finally {
    if (fis != null) {
        fis.close();
    }
}

;;搜索
IndexReader reader = DirectoryReader.open(FSDirectory.open(IndexFiles.index));
IndexSearcher searcher = new IndexSearcher(reader);
Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_40);
QueryParser parser = new QueryParser(Version.LUCENE_40, IndexFiles.INDEX_CONTENTS, analyzer);//查询解析器

Query query = parser.parse("world");//搜索关键字

TopDocs results = searcher.search(query, 10);//查询最大结果数
int numTotalHits = results.totalHits;//查询符合结果数
for (ScoreDoc scoreDoc : results.scoreDocs) {
    Document doc = searcher.doc(scoreDoc.doc);
    String path = doc.get(IndexFiles.INDEX_PATH);
    String modified = doc.get(IndexFiles.INDEX_MODIFIED);
    String contents = doc.get(IndexFiles.INDEX_CONTENTS);
    System.out.println("path:" + path);
    System.out.println("modified:" + modified);
    System.out.println("contents:" + contents);
}