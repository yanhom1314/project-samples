安装
PHP
./configure --prefix=/phd/bin/php5 --with-pgsql


Spawn-fcgi
wget http://www.lighttpd.net/download/spawn-fcgi-1.6.0rc1-r16.tar.gz
tar zxvf spawn-fcgi-1.6.0rc1-r16.tar.gz 
./configure --prefix=/phd/bin/spawn-fcgi
make && make install


Nginx
wget http://sysoev.ru/nginx/nginx-0.7.65.tar.gz
./configure  --prefix=/phd/bin/nginx --with-pcre=/phd/tools/pcre-7.7 --with-http_perl_module --with-http_stub_status_module --with-http_gzip_static_module
Nagios
wget http://prdownloads.sourceforge.net/sourceforge/nagios/nagios-3.2.1.tar.gz
./configure --prefix=/phd/bin/nginx

Nagios Plugin
wget -c http://prdownloads.sourceforge.net/sourceforge/nagiosplug/nagios-plugins-1.4.13.tar.gz
./configure --prefix=/phd/bin/nagios --with-pgsql=/phd/bin/postgresql --enable-perl-modules --enable-extra-opts --with-nagios-user=nagios --with-nagios-group=nagios

Nrpe
wget http://prdownloads.sourceforge.net/sourceforge/nagios/nrpe-2.12.tar.gz
./configure --prefix=/phd/bin/nagios -enable-ssl --enable-command-args
make all
make install-plugin
make install-daemon
make install-xinetd
make install-daemon-config


用户、群组建立
groupadd nagios
useradd -g nagios nagios
#使用Apache htpasswd工具创建nagios与nginx的验证文件
./htpasswd -c /phd/bin/nginx/conf/nagios.pwd nagios
./htpasswd -c /phd/bin/nginx/conf/nginx.pwd nginx


权限
1.修改${nginx.home}/conf/nginx.conf配置
	#user nobody -> user nagios	
	location ~ .*\.php$ {
            root /phd/bin/nagios;
            fastcgi_pass   127.0.0.1:10080;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;#$document_root就是/phd/bin/nagios
            auth_basic      “nagios”;
            auth_basic_user_file   /phd/bin/nginx/conf/nagios.pwd;
            include        fastcgi_params;
        }
        location ~ \.cgi$ {
            rewrite ^/nagios/cgi-bin/(.*)\.cgi /$1.cgi break;
            fastcgi_pass unix:/phd/bin/nagios/var/cgi.sock;
            fastcgi_index index.cgi;
            fastcgi_param SCRIPT_FILENAME /phd/bin/nagios/sbin/$fastcgi_script_name;
            fastcgi_param HTTP_ACCEPT_LANGUAGE zh-cn;
            auth_basic      “nagios”;
            auth_basic_user_file   /phd/bin/nginx/conf/nagios.pwd;
            include fastcgi_params;
        }
        location /nagios/ {
            alias /phd/bin/nagios/share/;
            index index.php;
            auth_basic      “nagios”;
            auth_basic_user_file   /phd/bin/nginx/conf/nagios.pwd;
        }
        location /status {
            stub_status            on;
            auth_basic             "status";
            access_log off;
            auth_basic_user_file   /phd/bin/nginx/conf/nginx.pwd;
        }
2.解决nginx中php使用nagios别名的问题，ln -s /phd/bin/nagios/share /phd/bin/nagios/nagios（应该有更好的办法）；

3.修改${nagios.home}/etc/nagios.cfg，在所有权限为nagiosadmin后面加入,nagios，让nagios也可以与nagiosadmin相同权限

4.修改${nagios.home}/etc/nagios.conf与${nagios.home}/etc/object/*.cfg文件可以定义各项内容，如：
命令
define command{
	command_name    
        command_line    
}
主机
define host{
        use                     linux-server            
        host_name               fdq-js
        alias                   fdq-js
        address                 221.231.148.249
}
服务
define service{
        use	generic-service
        host_name               fdq-js
        service_description     SSH
        check_command   check_ssh
}
联系人
define contact{
        contact_name                    nagiosadmin    
        use                             generic-contact
        alias                           Nagios Admin   
        pager                           13851924552   
        email                           lht@greatbit.com
}

4.配置验证
/phd/bin/nagios/bin/nagios -v /phd/bin/nagios/etc/nagios.cfg

Total Warnings: 0
Total Errors:   0

无警告也无错误。

FastCGI
cgi.pl
#!/usr/bin/perl
use FCGI;
use Socket;
use FCGI::ProcManager;
sub shutdown { FCGI::CloseSocket($socket); exit; }
sub restart  { FCGI::CloseSocket($socket); &main; }
use sigtrap 'handler', \&shutdown, 'normal-signals';
use sigtrap 'handler', \&restart,  'HUP';
require 'syscall.ph';
use POSIX qw(setsid);

END()   { }
BEGIN() { }
{
	no warnings;
	*CORE::GLOBAL::exit = sub { die "fakeexit\nrc=" . shift() . "\n"; };
};
eval q{exit};
if ($@) {
	exit unless $@ =~ /^fakeexit/;
}
&main;

sub daemonize() {
	chdir '/' or die "Can't chdir to /$!";
	defined( my $pid = fork ) or die "Can't fork$!";
	exit if $pid;
	setsid() or die "Can't start a new session$!";
	umask 0;
}

sub main {

	$proc_manager = FCGI::ProcManager->new( {n_processes => 5} );
	$socket = FCGI::OpenSocket( "/phd/bin/nagios/var/cgi.sock", 10 )
	; #use UNIX sockets - user running this script must have w access to the 'nginx' folder!!
	$request =
	FCGI::Request( \*STDIN, \*STDOUT, \*STDERR, \%req_params, $socket,
		&FCGI::FAIL_ACCEPT_ON_INTR );
	$proc_manager->pm_manage();
	if ($request) { request_loop() }
	FCGI::CloseSocket($socket);
}

sub request_loop {
	while ( $request->Accept() >= 0 ) {
		$proc_manager->pm_pre_dispatch();

#processing any STDIN input from WebServer (for CGI-POST actions)
		$stdin_passthrough = '';
		{ no warnings; $req_len = 0 + $req_params{'CONTENT_LENGTH'}; };
		if ( ( $req_params{'REQUEST_METHOD'} eq 'POST' ) && ( $req_len != 0 ) )
		{
			my $bytes_read = 0;
			while ( $bytes_read < $req_len ) {
				my $data = '';
				my $bytes = read( STDIN, $data, ( $req_len - $bytes_read ) );
				last if ( $bytes == 0 || !defined($bytes) );
				$stdin_passthrough .= $data;
				$bytes_read += $bytes;
			}
		}

#running the cgi app
		if (
			( -x $req_params{SCRIPT_FILENAME} ) &&    #can I execute this?
			( -s $req_params{SCRIPT_FILENAME} ) &&    #Is this file empty?
			( -r $req_params{SCRIPT_FILENAME} )       #can I read this file?
		)
		{
			pipe( CHILD_RD,   PARENT_WR );
			pipe( PARENT_ERR, CHILD_ERR );
			my $pid = open( CHILD_O, "-|" );
			unless ( defined($pid) ) {
				print("Content-typetext/plain\r\n\r\n");
				print
				"ErrorCGI app returned no output - Executing $req_params{SCRIPT_FILENAME} failed !\n";
				next;
			}
			$oldfh = select(PARENT_ERR);
			$|     = 1;
			select(CHILD_O);
			$| = 1;
			select($oldfh);
			if ( $pid > 0 ) {
				close(CHILD_RD);
				close(CHILD_ERR);
				print PARENT_WR $stdin_passthrough;
				close(PARENT_WR);
				$rin = $rout = $ein = $eout = '';
				vec( $rin, fileno(CHILD_O),    1 ) = 1;
				vec( $rin, fileno(PARENT_ERR), 1 ) = 1;
				$ein    = $rin;
				$nfound = 0;

				while ( $nfound =
					select( $rout = $rin, undef, $ein = $eout, 10 ) )
				{
					die "$!" unless $nfound != -1;
					$r1 = vec( $rout, fileno(PARENT_ERR), 1 ) == 1;
					$r2 = vec( $rout, fileno(CHILD_O),    1 ) == 1;
					$e1 = vec( $eout, fileno(PARENT_ERR), 1 ) == 1;
					$e2 = vec( $eout, fileno(CHILD_O),    1 ) == 1;

					if ($r1) {
						while ( $bytes = read( PARENT_ERR, $errbytes, 4096 ) ) {
							print STDERR $errbytes;
						}
						if ($!) {
							$err = $!;
							die $!;
							vec( $rin, fileno(PARENT_ERR), 1 ) = 0
							unless ( $err == EINTR or $err == EAGAIN );
						}
					}
					if ($r2) {
						while ( $bytes = read( CHILD_O, $s, 4096 ) ) {
							print $s;
						}
						if ( !defined($bytes) ) {
							$err = $!;
							die $!;
							vec( $rin, fileno(CHILD_O), 1 ) = 0
							unless ( $err == EINTR or $err == EAGAIN );
						}
					}
					last if ( $e1 || $e2 );
				}
				close CHILD_RD;
				close PARENT_ERR;
				waitpid( $pid, 0 );
			} else {
				foreach $key ( keys %req_params ) {
					$ENV{$key} = $req_params{$key};
				}

# cd to the script's local directory
				if ( $req_params{SCRIPT_FILENAME} =~ /^(.*)\/[^\/] +$/ ) {
					chdir $1;
				}
				close(PARENT_WR);

#close(PARENT_ERR);
				close(STDIN);
				close(STDERR);

#fcntl(CHILD_RD, F_DUPFD, 0);
				syscall( &SYS_dup2, fileno(CHILD_RD),  0 );
				syscall( &SYS_dup2, fileno(CHILD_ERR), 2 );

#open(STDIN, "<&CHILD_RD");
				exec( $req_params{SCRIPT_FILENAME} );
				die("exec failed");
			}
		} else {
			print("Content-typetext/plain\r\n\r\n");
			print
			"ErrorNo such CGI app - $req_params{SCRIPT_FILENAME} may not exist or is not executable by this process.\n";
		}
	}
}

服务端
启动FastCGI PHP
/phd/bin/spawn-fcgi/bin/spawn-fcgi -a 127.0.0.1 -p 10080 -C 64 -u nagios -g nagios -f /phd/bin/php5/bin/php-cgi 
启动FastCGI Perl
./cgi.pl
启动Nagios
service nagios start
客户端
安装Nrpe
make install-xinetd
编辑/etc/services
添加这个
nrpe            5666/tcp        # NRPE

service xinetd restart



# 两个启动报错解决办法
Can’t locate FCGI.pm
wget http://www.cpan.org/modules/by-module/FCGI/FCGI-0.67.tar.gz
tar zxf FCGI-0.67.tar.gz&& cd FCGI-0.67 && perl Makefile.PL && make && make install
Can’t locate FCGI/ProcManager.pm
wget http://www.cpan.org/modules/by-module/FCGI/FCGI-ProcManager-0.19.tar.gz
tar zxf FCGI-ProcManager-0.19.tar.gz && cd FCGI-ProcManager-0.19 && perl Makefile.PL && make && make install
