plugins {
    id 'play'
}

apply plugin: 'scala'

Properties props = new Properties()

processResources {
    props.load(new FileInputStream("build.properties"))
    props.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
}

model {
    components {
        play {
            injectedRoutesGenerator = true
            platform play: "$play", scala: '2.12.2', java: '1.8'
        }
    }
}
dependencies {
    play("com.typesafe.play:play-ws_2.12:$play",
         "com.typesafe.play:play-cache_2.12:$play",
         "com.typesafe.play:play-guice_2.12:$play",
         "com.typesafe.play:play-slick_2.12:$play_slick",
         "com.typesafe.play:play-slick-evolutions_2.12:$play_slick",
         "org.apache.shiro:shiro-core:$shiro",
         "org.postgresql:postgresql:$postgresql",
         "com.h2database:h2:$h2",
         "org.springframework.data:spring-data-jpa:$spring_data_jpa",
         "org.hibernate:hibernate-hikaricp:$hibernate")

    playTest("org.scalatestplus.play:scalatestplus-play_2.12:$scalatestplus",
            "junit:junit:$junit")
}

task(versions) {
    doLast {
        project.properties.each { prop ->
           println(prop.key+"="+prop.value)
        }
    }
}